buildscript {
    repositories {
//        maven {
//            url 'http://maven.aliyun.com/nexus/content/groups/public/'
//        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
    }
}

apply plugin: 'java'
//apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

/*
war {
    baseName = 'metagrid_api'
    version = '0.0.1'
}
*/

def appName = 'metagrid-api'
def appVersion = '1.5'

jar {
    baseName = appName
    version = appVersion
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    // configuration that holds jars to copy into lib
    extraLibs
    provided

    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    all*.exclude group: 'log4j'
    all*.exclude group: 'javax.servlet', module: 'servlet-api'

    all*.resolutionStrategy {
        dependencySubstitution {
            substitute module('org.slf4j:slf4j-log4j12') with module('ch.qos.logback:logback-classic:1.1.7')
            //prefer 'log4j-over-slf4j' over 'log4j'
        }
    }
}

bootRun {
    addResources = true
    if ( project.hasProperty('jvmArgs') ) {
        jvmArgs = (project.jvmArgs.split("\\s+") as List)
    }
}

repositories {
//    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url "http://192.168.0.54:8081/nexus/content/groups/public" }
    maven { url "http://192.168.0.54:8081/nexus/content/repositories/thirdparty/" }
    maven { url "http://repo1.maven.org/maven2" }
    maven { url "http://repo2.maven.org/maven2" }
    maven { url "http://repo.maven.apache.org/maven2" }
    maven { url "https://oss.sonatype.org/content/groups/public/" }
}

dependencies {
    compile project(":metagrid-common")
    compile project(":metadata-etl")
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.3.5.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '1.3.5.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '1.3.5.RELEASE'
    compile group: 'org.springframework', name: 'spring-messaging', version: '4.2.6.RELEASE'
    //compile("org.springframework.boot:spring-boot-devtools")
//    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
//    compile group: 'javax.servlet.jsp.jstl', name: 'jstl-api', version: '1.2'
//    compile (group: 'org.apache.hadoop', name: 'hadoop-client', version: '2.6.0') {
//        exclude(module: 'servlet-api')
//    }
//    compile(group: 'org.apache.hbase', name: 'hbase-client', version: '1.0.0')
    compile group: 'junit', name: 'junit', version: '4.12'
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter', version: '1.3.5.RELEASE') {
        exclude(module: 'commons-logging')
    }
//    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.34'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '4.2.6.RELEASE'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
//    compile(group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2') {
//        exclude(module: 'commons-logging')
//    }
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.0.13'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.13'
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.6.6'
    compile(group: 'io.springfox', name: 'springfox-swagger2', version: '2.4.0') {
        exclude(module: 'guava')
    }
    compile(group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.4.0') {
        exclude(module: 'guava')
    }
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.15'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.3.1'
    compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.2.2'
    compile group: 'org.mybatis', name: 'mybatis', version: '3.2.8'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.8'
    compile group: 'com.github.jsqlparser', name: 'jsqlparser', version: '0.9.6'
    compile group: 'org.elasticsearch', name: 'elasticsearch', version: '5.2.2'
    compile group: 'org.elasticsearch.plugin', name: 'transport-netty4-client', version: '5.2.2'
    //compile group: 'com.chinacloud.mir.common', name: 'one-aa-sdk',version:'1.0-SNAPSHOT'
//    compile group: 'org.mitre.dsmiley.httpproxy', name: 'smiley-http-proxy-servlet', version: '1.6'
    compile group: 'org.apache.poi', name: 'poi', version: '3.9'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.9'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.9'
    compile group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: '3.9'

//    compile group: 'org.apache.hadoop', name: 'hadoop-common', version: '2.7.3'
//    compile group: 'org.apache.hadoop', name: 'hadoop-client', version: '2.7.3'
//    compile group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: '2.7.3'
//    compile group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: '2.7.3'
    compile group: 'org.htrace', name: 'htrace-core', version: '3.0.4'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.2'
//    compile group: 'org.apache.hadoop', name: 'hadoop-client', version: '2.7.3'


    provided project(":metagrid-common")
    provided project(":metadata-etl")
}

//清除上次的编译过的文件
task clearJars(type: Delete) {
    delete 'build', 'target'
}

//依赖编译，然后打包JAR
task taskJars(type: Jar, dependsOn: compileJava) {
    from 'build/classes/main'
    baseName = appName
//    exclude('test/', 'BuildConfig.class', 'R.class')
    destinationDir = file('build/libs')
}

// 拷贝依赖jar到指定目录
task copyJars(type: Copy) {
    from configurations.runtime
    into('build/' + appName + '/lib')
}

// 拷贝依赖配置文件到指定目录
task copyResources(type: Copy) {
    from 'src/main/resources'
    into('build/' + appName + '/conf/rs')
}

// 拷贝启动文件目录
task copyBin(type: Copy) {
    from 'bin'
    into('build/' + appName + '/bin')
}

jar.dependsOn(copyJars)

//把JAR复制到目标目录
task release(type: Copy, dependsOn: [clearJars, taskJars, copyJars, copyResources, copyBin]) {
    from('build/libs') {
        include '*.jar'
    }
    into('build/' + appName)
}

task zip(type: Zip, dependsOn: [release]) {
    from('build/' + appName)
    into(appName)
    baseName = appName
    version = appVersion
}

task tar(type: Tar, dependsOn: [release]) {
    from('build/' + appName)
    into(appName + '-' + appVersion)
    compression Compression.GZIP
    baseName = appName
    version = appVersion
}
